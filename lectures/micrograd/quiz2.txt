1. **What does the `backward` method in the `Value` class do?**
   
    a) It forwards the data through the computational graph.
   
    b) It performs the backward pass of the computational graph and updates the gradients of all preceding nodes.
   
    c) It calculates the forward pass through the neuron.
   
    d) It computes the weight updates during training.
    
   **Answer: b** 

2. **What is the function of the `trace` and `draw_dot` methods in this code?**

    a) They perform weight updates in the model.
   
    b) They handle the forward and backward propagation respectively.
   
    c) `trace` generates all nodes and edges starting from a given root while `draw_dot` saves the model weights into a file.
   
    d) `trace` generates all nodes and edges starting from a given root while `draw_dot` is used for creating a visual representation of the computational graph.

   **Answer: d**

3. **What are the operations performed in the `__call__` method of the `Neuron` class?**

    a) It initializes the weights and biases of the neuron.
   
    b) It performs a forward pass through the neuron, computing the weighted sum of its inputs and then passing that sum through the `tanh` activation function.
   
    c) It performs the backward pass and updates the gradients.
   
    d) It handles the weight updates during training.

   **Answer: b**

4. **What is the purpose of the `MLP` class in the code?**

    a) It defines a feedforward neural network architecture with an arbitrary number of hidden layers.
   
    b) It performs weight initialization for the neural network.
   
    c) It handles the training and backpropagation for the model.
   
    d) It calculates the loss function for the neural network.

   **Answer: a**

5. **What is the final output (`ypred`) of the code?**

    a) The predicted class labels for the given input.
   
    b) The updated weights and biases after training.
   
    c) The output of the network for each input in `xs` after 20 updates.
   
    d) The gradients for each neuron in the network.

   **Answer: c**
